#!/bin/bash

set -e

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
for pkg in curl jq wg zip; do
    if ! command -v $pkg &>/dev/null; then
        echo "‚è≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $pkg..."
        sudo apt-get update -y
        sudo apt-get install -y $pkg
    fi
done

API="https://api.cloudflareclient.com/v0i1909051800"

ins() {
    curl -s -H 'user-agent:' -H 'content-type: application/json' -X "$1" "$API/$2" "${@:3}"
}
sec() {
    ins "$1" "$2" -H "authorization: Bearer $3" "${@:4}"
}

read -p "–°–∫–æ–ª—å–∫–æ WARP-–∫–æ–Ω—Ñ–∏–≥–æ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å? (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 25): " COUNT
COUNT=${COUNT:-25}
echo "‚ñ∂Ô∏è –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º $COUNT –∫–æ–Ω—Ñ–∏–≥–æ–≤..."

TMPDIR=$(mktemp -d)
trap 'rm -rf "$TMPDIR"' EXIT

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥–æ–≤
success_count=0
for i in $(seq 1 $COUNT); do
    echo -ne "  –ü—Ä–æ–≥—Ä–µ—Å—Å: $i/$COUNT [–£—Å–ø–µ—à–Ω–æ: $success_count]\r"
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª—é—á–µ–π
    priv=$(wg genkey)
    pub=$(echo "$priv" | wg pubkey)
    
    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    if ! resp=$(ins POST "reg" -d "{\"install_id\":\"\",\"tos\":\"$(date -u +%FT%T.000Z)\",\"key\":\"$pub\",\"fcm_token\":\"\",\"type\":\"ios\",\"locale\":\"en_US\"}"); then
        echo "‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ $i"
        continue
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–≤–µ—Ç–∞
    if ! echo "$resp" | jq -e '.result.id' >/dev/null 2>&1; then
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç API –¥–ª—è $i"
        continue
    fi
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è WARP
    id=$(echo "$resp" | jq -r '.result.id')
    token=$(echo "$resp" | jq -r '.result.token')
    resp=$(sec PATCH "reg/$id" "$token" -d '{"warp_enabled":true}')
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞
    peer_pub=$(echo "$resp" | jq -r '.result.config.peers[0].public_key')
    client_ipv4=$(echo "$resp" | jq -r '.result.config.interface.addresses.v4')
    client_ipv6=$(echo "$resp" | jq -r '.result.config.interface.addresses.v6')
    
    cat > "$TMPDIR/warp_$i.conf" <<EOF
[Interface]
PrivateKey = $priv
Address = $client_ipv4, $client_ipv6
DNS = 1.1.1.1, 2606:4700:4700::1111

[Peer]
PublicKey = $peer_pub
AllowedIPs = 0.0.0.0/0, ::/0
Endpoint = 188.114.97.66:3138
EOF
    
    ((success_count++))
done

echo -e "\n‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ $success_count/$COUNT –∫–æ–Ω—Ñ–∏–≥–æ–≤"

# –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–∏–µ
ZIPNAME="WARP_$(date +%Y%m%d_%H%M%S)_${success_count}configs.zip"
cd "$TMPDIR"
zip -q "$ZIPNAME" *.conf
cd - >/dev/null

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä—Ö–∏–≤–∞
if [ ! -f "$TMPDIR/$ZIPNAME" ]; then
    echo "‚ùå –§–∞–π–ª –∞—Ä—Ö–∏–≤–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
    exit 1
fi

# –î–≤–æ–π–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ —Ä–∞–∑–Ω—ã–µ —Å–µ—Ä–≤–∏—Å—ã
upload_success=0
echo "‚è´ –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–∞ transfer.sh..."
if UPLOAD_URL=$(curl --progress-bar --upload-file "$TMPDIR/$ZIPNAME" "https://transfer.sh/$ZIPNAME"); then
    if [[ "$UPLOAD_URL" == https://* ]]; then
        echo -e "\nüîó –û—Å–Ω–æ–≤–Ω–∞—è —Å—Å—ã–ª–∫–∞ (transfer.sh):"
        echo "$UPLOAD_URL"
        upload_success=1
    fi
fi

if [ $upload_success -eq 0 ]; then
    echo "‚è´ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–∞ file.io..."
    if RESPONSE=$(curl -s -F "file=@$TMPDIR/$ZIPNAME" https://file.io/?expires=14d); then
        if UPLOAD_URL=$(echo "$RESPONSE" | jq -r '.link'); then
            echo -e "\nüîó –†–µ–∑–µ—Ä–≤–Ω–∞—è —Å—Å—ã–ª–∫–∞ (file.io):"
            echo "$UPLOAD_URL"
            upload_success=1
        fi
    fi
fi

# –§–∏–Ω–∞–ª
if [ $upload_success -eq 1 ]; then
    echo -e "\n‚ö†Ô∏è –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ 14 –¥–Ω–µ–π. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º:"
    echo "1. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É –≤—ã—à–µ"
    echo "2. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"
    echo "3. –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∞—Ä—Ö–∏–≤ –ª–æ–∫–∞–ª—å–Ω–æ"
else
    echo "‚ùå –í—Å–µ —Å–ø–æ—Å–æ–±—ã –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏"
    echo "–ê—Ä—Ö–∏–≤ –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∑–¥–µ—Å—å:"
    echo "$TMPDIR/$ZIPNAME"
fi

@@ -1,44 +1,50 @@
#!/bin/bash

clear
mkdir -p ~/.cloudshell && touch ~/.cloudshell/no-apt-get-warning # –î–ª—è Google Cloud Shell
echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
apt update -y && apt install sudo -y
sudo apt-get update -y --fix-missing
sudo apt-get install wireguard-tools jq wget curl -y --fix-missing

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
mkdir -p ~/.cloudshell && touch ~/.cloudshell/no-apt-get-warning
echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
apt update -y && apt install sudo -y 2>/dev/null
sudo apt-get update -y --fix-missing && sudo apt-get install wireguard-tools jq wget curl -y --fix-missing

# –°–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–∏–≥–æ–≤ —Å–æ–∑–¥–∞—Ç—å
echo -n "–°–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–∏–≥–æ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å? (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1): "
read count
# –°–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–∏–≥–æ–≤
read -p "–°–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ñ–∏–≥–æ–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å? (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1): " count
count=${count:-1}

# Cloudflare WARP API –∏ –≤–∞—à–∞ —Å—Å—ã–ª–∫–∞
api="https://api.cloudflareclient.com/v0i1909051800"
# –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≤–æ–π downloader
downloader="https://quad-z.github.io/Warp/downloader.html?filename="

# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
# API Cloudflare WARP
api="https://api.cloudflareclient.com/v0i1909051800"
ins() { curl -s -H 'user-agent:' -H 'content-type: application/json' -X "$1" "${api}/$2" "${@:3}"; }
sec() { ins "$1" "$2" -H "authorization: Bearer $3" "${@:4}"; }

clear

for i in $(seq 1 "$count"); do
  priv=$(wg genkey)
  pub=$(echo "$priv" | wg pubkey)

  # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏ –∞–∫—Ç–∏–≤–∞—Ü–∏—è WARP
  response=$(ins POST "reg" -d "{\"install_id\":\"\",\"tos\":\"$(date -u +%FT%T.000Z)\",\"key\":\"${pub}\",\"fcm_token\":\"\",\"type\":\"ios\",\"locale\":\"en_US\"}")
  payload=$(cat <<EOF
{
  "install_id": "",
  "tos": "$(date -u +%FT%T.000Z)",
  "key": "${pub}",
  "fcm_token": "",
  "type": "ios",
  "locale": "en_US"
}
EOF
)

  response=$(ins POST "reg" -d "$payload")
  id=$(echo "$response" | jq -r '.result.id')
  token=$(echo "$response" | jq -r '.result.token')

  response=$(sec PATCH "reg/${id}" "$token" -d '{"warp_enabled":true}')

  peer_pub=$(echo "$response" | jq -r '.result.config.peers[0].public_key')
  client_ipv4=$(echo "$response" | jq -r '.result.config.interface.addresses.v4')
  client_ipv6=$(echo "$response" | jq -r '.result.config.interface.addresses.v6')

  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥–∞ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
  conf=$(cat <<-EOM
  conf=$(cat <<EOM
[Interface]
PrivateKey = ${priv}
S1 = 0
@@ -61,6 +67,9 @@ Endpoint = 188.114.97.66:3138
EOM
)

  # –ö–æ–¥–∏—Ä–æ–≤–∫–∞ –≤ Base64 –∏ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Å—ã–ª–∫–∏
  encoded=$(echo -n "$conf" | base64 -w 0)
  echo -e "\nüì• –ö–æ–Ω—Ñ
  conf_base64=$(echo -n "${conf}" | base64 -w 0)
  echo -e "\nüì• –ö–æ–Ω—Ñ–∏–≥ #$i:"
  echo "${downloader}WARP_${i}.conf&content=${conf_base64}"
done

echo -e "\n‚úÖ –í—Å–µ —Å—Å—ã–ª–∫–∏ –≥–æ—Ç–æ–≤—ã."
